// Generated by view binder compiler. Do not edit!
package edu.uci.ics.fabflixmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import edu.uci.ics.fabflixmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleMovieBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView singleMovieDirector;

  @NonNull
  public final TextView singleMovieGenres;

  @NonNull
  public final TextView singleMovieStars;

  @NonNull
  public final TextView singleMovieTitle;

  @NonNull
  public final TextView singleMovieYear;

  private SingleMovieBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView singleMovieDirector, @NonNull TextView singleMovieGenres,
      @NonNull TextView singleMovieStars, @NonNull TextView singleMovieTitle,
      @NonNull TextView singleMovieYear) {
    this.rootView = rootView;
    this.singleMovieDirector = singleMovieDirector;
    this.singleMovieGenres = singleMovieGenres;
    this.singleMovieStars = singleMovieStars;
    this.singleMovieTitle = singleMovieTitle;
    this.singleMovieYear = singleMovieYear;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleMovieBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_movie, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleMovieBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.single_movie_Director;
      TextView singleMovieDirector = rootView.findViewById(id);
      if (singleMovieDirector == null) {
        break missingId;
      }

      id = R.id.single_movie_Genres;
      TextView singleMovieGenres = rootView.findViewById(id);
      if (singleMovieGenres == null) {
        break missingId;
      }

      id = R.id.single_movie_Stars;
      TextView singleMovieStars = rootView.findViewById(id);
      if (singleMovieStars == null) {
        break missingId;
      }

      id = R.id.single_movie_Title;
      TextView singleMovieTitle = rootView.findViewById(id);
      if (singleMovieTitle == null) {
        break missingId;
      }

      id = R.id.single_movie_Year;
      TextView singleMovieYear = rootView.findViewById(id);
      if (singleMovieYear == null) {
        break missingId;
      }

      return new SingleMovieBinding((ConstraintLayout) rootView, singleMovieDirector,
          singleMovieGenres, singleMovieStars, singleMovieTitle, singleMovieYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
